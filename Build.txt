
; 64tass Turbo Assembler Macro V1.56.2625 listing file
; 64tass.exe -a -oBuild.prg --tab-size=4 -L Build.txt --dump-labels -l Build.sym Build.asm
; Thu Nov 18 15:03:47 2021

;Offset	;PC		;Hex			;Monitor		;Source

;******  Processing input file: Build.asm

=$c4											ZERO_PAGE			= $c4
=$2001											BASIC_CODE			= $2001
=$2020											MAIN_CODE 			= $2020
>2001			0a 20 0a 00 fe 02 20 30					.byte $0a,$20,$0a,$00,$fe,$02,$20,$30,$00 		;10 BANK 0
>2009			00
>200a			16 20 14 00 9e 38 32 32					.byte $16,$20,$14,$00,$9e,$38,$32,$32,$34,$00	;20 SYS8224 ($2020)
>2012			34 00
>2014			00 00									.byte $00,$00									;End
.2020			ad 14 01		lda $0114						lda $0114
.2023			ae 15 01		ldx $0115						ldx $0115
.2026			ac 16 01		ldy $0116						ldy $0116
.2029			ab 17 01		ldz $0117						ldz $0117
.202c			5c				map								map
.202d			ea				nop								eom
.202e			a9 01			lda #$01						lda #%00000001
.2030			0c 03 d7		tsb $d703						tsb $d703
.2033			a9 40			lda #$40						lda #%01000000
.2035			1c 54 d0		trb $d054						trb $d054
.2038			a9 07			lda #$07						lda #%00000111
.203a			1c 7c d0		trb $d07c						trb $d07c
.203d			78				sei								sei
.203e			ad 14 03		lda $0314		 				lda $314
.2041			8d f3 20		sta $20f3						sta return+1
.2044			ad 15 03		lda $0315						lda $315
.2047			8d f4 20		sta $20f4						sta return+2
.204a			a9 aa			lda #$aa						lda #<Int
.204c			8d 14 03		sta $0314						sta $314
.204f			a9 20			lda #$20						lda #>Int
.2051			8d 15 03		sta $0315						sta $315
.2054			a9 80			lda #$80						lda #%10000000
.2056			1c 11 d0		trb $d011						trb $d011
.2059			a9 f5			lda #$f5						lda #<245
.205b			8d 12 d0		sta $d012						sta $d012
.205e			a2 0f			ldx #$0f						ldx #15
.2060			a9 00			lda #$00						lda #0
.2062			8d 00 d1		sta $d100						sta $d100
.2065			8d 00 d2		sta $d200						sta $d200
.2068			8d 00 d3		sta $d300						sta $d300
.206b			8e 01 d1		stx $d101						stx $d101
.206e			8d 01 d2		sta $d201						sta $d201
.2071			8d 01 d3		sta $d301						sta $d301
.2074			8d 02 d1		sta $d102						sta $d102
.2077			8e 02 d2		stx $d202						stx $d202
.207a			8d 02 d3		sta $d302						sta $d302
.207d			8d 03 d1		sta $d103						sta $d103
.2080			8d 03 d2		sta $d203						sta $d203
.2083			8e 03 d3		stx $d303						stx $d303
.2086			a9 88			lda #$88						lda #%10001000
.2088			8d 33 d0		sta $d033						sta $d033
.208b			8d 34 d0		sta $d034						sta $d034
.208e			a9 03			lda #$03						lda #%00000011
.2090			8d 32 d0		sta $d032						sta $d032
.2093			a9 50			lda #$50						lda #%01010000
.2095			8d 31 d0		sta $d031						sta $d031
.2098			a9 00			lda #$00						lda #0
.209a			8d 02 d7		sta $d702						sta $d702
.209d			a9 20			lda #$20						lda #>dma_clrscrn
.209f			8d 01 d7		sta $d701						sta $d701
.20a2			a9 fd			lda #$fd						lda #<dma_clrscrn
.20a4			8d 00 d7		sta $d700						sta $d700
.20a7			58				cli								cli
.20a8			80 fe			bra $20a8		Wait			bra	Wait
.20aa											Int
.20aa			a9 01			lda #$01						lda #1
.20ac			8d 20 d0		sta $d020						sta $d020
.20af			a9 00			lda #$00						lda #0
.20b1			8d 02 d7		sta $d702						sta $d702
.20b4			a9 21			lda #$21						lda #>dma_clrcube
.20b6			8d 01 d7		sta $d701						sta $d701
.20b9			a9 15			lda #$15						lda #<dma_clrcube
.20bb			8d 00 d7		sta $d700						sta $d700
.20be			ee 20 d0		inc $d020						inc $d020
.20c1			ad f6 20		lda $20f6						lda xa
.20c4			8d 4e 21		sta $214e						sta matrix.X
.20c7			ad f7 20		lda $20f7						lda ya
.20ca			8d 2e 21		sta $212e						sta matrix.Y
.20cd			ad f8 20		lda $20f8						lda za
.20d0			8d 31 21		sta $2131						sta matrix.Z
.20d3			20 2d 21		jsr $212d						jsr matrix.CalcMatrix
.20d6			ee 20 d0		inc $d020						inc $d020
.20d9			20 00 25		jsr $2500						jsr cube.DrawCube
.20dc			ad fc 20		lda $20fc						lda colour
.20df			8d 20 d0		sta $d020						sta $d020
.20e2			ee f6 20		inc $20f6						inc xa
.20e5			ce f5 20		dec $20f5						dec timer
.20e8			d0 08			bne $20f2						bne return
.20ea			a9 02			lda #$02						lda #2
.20ec			8d f5 20		sta $20f5						sta timer
.20ef			ee f7 20		inc $20f7						inc ya
.20f2			4c 00 20		jmp $2000		return			jmp $2000	;Code will set this return address
>20f5			01								timer			.byte 1
>20f6			00								xa				.byte 0
>20f7			00								ya				.byte 0
>20f8			00								za 				.byte 0
>20f9			00								xi				.byte 0
>20fa			00								yi				.byte 0
>20fb			00								zi 				.byte 0
>20fc			00								colour			.byte 0
>20fd			07								dma_clrscrn	.byte %00000111 ;command low byte: FILL+CHAIN
>20fe			40 1f										.word 8000		;40x200 = 8000
>2100			00 00										.word 0000		;source address/fill value
>2102			00											.byte 0			;source Bank
>2103			00 80										.word $8000		;destination address
>2105			01											.byte 1			;destination Bank
>2106			00											.byte 0			;command hi byte
>2107			00 00										.word 0			;modulo
>2109			03											.byte %00000011	;command low byte: FILL
>210a			40 1f										.word 8000		;40x200 = 8000
>210c			00 00										.word 0000		;source address/fill value
>210e			00											.byte 0			;source Bank
>210f			00 80										.word $8000		;destination address
>2111			00											.byte 0			;destination Bank
>2112			00											.byte 0			;command hi byte
>2113			00 00										.word 0			;modulo
>2115			07								dma_clrcube	.byte %00000111 ;command low byte: FILL+CHAIN
>2116			00 13										.word 4864		;40x200 = 8000
>2118			00 00										.word 0000		;source address/fill value
>211a			00											.byte 0			;source Bank
>211b			c0 86										.word 34496		;destination address
>211d			01											.byte 1			;destination Bank
>211e			00											.byte 0			;command hi byte
>211f			00 00										.word 0			;modulo
>2121			03											.byte %00000011	;command low byte: FILL
>2122			00 13										.word 4864		;40x200 = 8000
>2124			00 00										.word 0			;source address/fill value
>2126			00											.byte 0			;source Bank
>2127			c0 86										.word 34496		;destination address
>2129			00											.byte 0			;destination Bank
>212a			00											.byte 0			;command hi byte
>212b			00 00										.word 0			;modulo
.212d											matrix

;******  Processing file: Matrix.asm

=$212d											CalcMatrix 	= calc_matrix 	;Calculate matix routine address
=$214e											X			= sx			;X rotation value
=$212e											Y			= sy			;Y rotation value
=$2131											Z			= sz			;Z rotation value
=$214e											sx		= x_var + 1		;X rotation value
=$212e											sy		= y_var + 1		;Y rotation value
=$2131											sz		= z_var + 1		;Z rotation value
=$2192											v1		= v1_var + 1	;v1 variable
=$2194											v2 		= v2_var + 1	;v2 variable
=$21fd											v3 		= v3_var + 1	;v3 variable
=$21ff											v4 		= v4_var + 1	;v4 variable
=$21c6											v5 		= v5_var + 1	;v5 variable
=$21c8											v6 		= v6_var + 1	;v6 variable
=$21e0											v7 		= v7_var + 1	;v7 variable
=$21e2											v8 		= v8_var + 1	;v8 variable
=$21ac											v9 		= v9_var + 1	;v9 variable
=$21ae											v10 	= v10_var + 1	;v10 variable
=$220c											t1 		= t1_var + 1	;lt1 variable
=$2223											t2 		= t2_var + 1	;lt2 variable
=$223b											t3 		= t3_var + 1	;lt3 variable
=$220f											t4 		= t4_var + 1	;lt4 variable
=$2213											md 		= md_var + 1	;md variable
=$222b											me 		= me_var + 1	;me variable
=$2243											mg 		= mg_var + 1	;mg variable
=$225c											mh 		= mh_var + 1	;mh variable
.212d											calc_matrix
.212d			a9 00			lda #$00		y_var	lda #0 		;Y
.212f			38				sec						sec
.2130			e9 00			sbc #$00		z_var	sbc #0 		;Z
.2132			8d 92 21		sta $2192				sta v1
.2135			18				clc						clc
.2136			6d 4e 21		adc $214e				adc sx
.2139			8d e0 21		sta $21e0				sta v7
.213c			ad 2e 21		lda $212e				lda	sy
.213f			18				clc						clc
.2140			6d 31 21		adc $2131				adc sz
.2143			8d 94 21		sta $2194				sta v2
.2146			18				clc						clc
.2147			6d 4e 21		adc $214e				adc sx
.214a			8d c6 21		sta $21c6				sta v5
.214d			a9 00			lda #$00		x_var	lda #0 		;X
.214f			18				clc						clc
.2150			6d 31 21		adc $2131				adc sz
.2153			8d fd 21		sta $21fd				sta v3
.2156			ad 4e 21		lda $214e				lda sx
.2159			38				sec						sec
.215a			ed 31 21		sbc $2131				sbc sz
.215d			8d ff 21		sta $21ff				sta v4
.2160			ad 4e 21		lda $214e				lda sx
.2163			38				sec						sec
.2164			ed 92 21		sbc $2192				sbc v1
.2167			8d c8 21		sta $21c8				sta v6
.216a			ad 94 21		lda $2194				lda v2
.216d			38				sec						sec
.216e			ed 4e 21		sbc $214e				sbc sx
.2171			8d e2 21		sta $21e2				sta v8
.2174			ad 2e 21		lda $212e				lda sy
.2177			38				sec						sec
.2178			ed 4e 21		sbc $214e				sbc sx
.217b			8d ac 21		sta $21ac				sta v9
.217e			ad 2e 21		lda $212e				lda sy
.2181			18				clc						clc
.2182			6d 4e 21		adc $214e				adc sx
.2185			8d ae 21		sta $21ae				sta v10
.2188			ac 2e 21		ldy $212e				ldy sy
.218b			b9 00 23		lda $2300,y				lda sin_tbl,y
.218e			8d 01 25		sta $2501				sta cube.MC
.2191			a2 00			ldx #$00		v1_var	ldx #0 		;v1
.2193			a0 00			ldy #$00		v2_var	ldy #0 		;v2
.2195			bd 00 24		lda $2400,x				lda cos_tbl,x
.2198			18				clc						clc
.2199			79 00 24		adc $2400,y				adc cos_tbl,y
.219c			43				asr a					asr
.219d			8d 0e 25		sta $250e				sta cube.MA
.21a0			bd 00 23		lda $2300,x				lda sin_tbl,x
.21a3			38				sec						sec
.21a4			f9 00 23		sbc $2300,y				sbc sin_tbl,y
.21a7			43				asr a					asr
.21a8			8d 26 25		sta $2526				sta cube.MB
.21ab			a2 00			ldx #$00		v9_var	ldx #0  	;v9
.21ad			a0 00			ldy #$00		v10_var	ldy #0 		;v10
.21af			bd 00 23		lda $2300,x				lda sin_tbl,x
.21b2			38				sec						sec
.21b3			f9 00 23		sbc $2300,y				sbc sin_tbl,y
.21b6			43				asr a					asr
.21b7			8d 04 25		sta $2504				sta cube.MF
.21ba			bd 00 24		lda $2400,x				lda cos_tbl,x
.21bd			18				clc						clc
.21be			79 00 24		adc $2400,y				adc cos_tbl,y
.21c1			43				asr a					asr
.21c2			8d 06 25		sta $2506				sta cube.MI
.21c5			a2 00			ldx #$00		v5_var	ldx #0 		;v5
.21c7			a0 00			ldy #$00		v6_var	ldy #0 		;v6
.21c9			b9 00 24		lda $2400,y				lda cos_tbl,y
.21cc			38				sec						sec
.21cd			fd 00 24		sbc $2400,x				sbc cos_tbl,x
.21d0			43				asr a					asr
.21d1			8d 0c 22		sta $220c				sta t1
.21d4			bd 00 23		lda $2300,x				lda sin_tbl,x
.21d7			38				sec						sec
.21d8			f9 00 23		sbc $2300,y				sbc sin_tbl,y
.21db			43				asr a					asr
.21dc			8d 23 22		sta $2223				sta t2
.21df			a2 00			ldx #$00		v7_var	ldx #0 		;v7
.21e1			a0 00			ldy #$00		v8_var	ldy #0 		;v8
.21e3			a9 00			lda #$00				lda #0
.21e5			38				sec						sec
.21e6			fd 00 23		sbc $2300,x				sbc sin_tbl,x
.21e9			38				sec						sec
.21ea			f9 00 23		sbc $2300,y				sbc sin_tbl,y
.21ed			43				asr a					asr
.21ee			8d 3b 22		sta $223b				sta t3
.21f1			b9 00 24		lda $2400,y				lda cos_tbl,y
.21f4			38				sec						sec
.21f5			fd 00 24		sbc $2400,x				sbc cos_tbl,x
.21f8			43				asr a					asr
.21f9			8d 0f 22		sta $220f				sta t4
.21fc			a2 00			ldx #$00		v3_var	ldx #0 		;v3
.21fe			a0 00			ldy #$00		v4_var	ldy #0		;v4
.2200			bd 00 23		lda $2300,x				lda sin_tbl,x
.2203			38				sec						sec
.2204			f9 00 23		sbc $2300,y				sbc sin_tbl,y
.2207			43				asr a					asr
.2208			8d 13 22		sta $2213				sta md
.220b			a9 00			lda #$00		t1_var	lda #0		;t1
.220d			18				clc						clc
.220e			69 00			adc #$00		t4_var	adc #0		;t4
.2210			43				asr a					asr
.2211			18				clc						clc
.2212			69 00			adc #$00		md_var	adc #0		;md
.2214			8d 11 25		sta $2511				sta cube.MD
.2217			bd 00 24		lda $2400,x				lda cos_tbl,x
.221a			18				clc						clc
.221b			79 00 24		adc $2400,y				adc cos_tbl,y
.221e			43				asr a					asr
.221f			8d 2b 22		sta $222b				sta me
.2222			a9 00			lda #$00		t2_var	lda #0		;t2
.2224			18				clc						clc
.2225			6d 3b 22		adc $223b				adc t3
.2228			43				asr a					asr
.2229			18				clc						clc
.222a			69 00			adc #$00		me_var	adc #0		;me
.222c			8d 29 25		sta $2529				sta cube.ME
.222f			b9 00 24		lda $2400,y				lda cos_tbl,y
.2232			38				sec						sec
.2233			fd 00 24		sbc $2400,x				sbc cos_tbl,x
.2236			43				asr a					asr
.2237			8d 43 22		sta $2243				sta mg
.223a			a9 00			lda #$00		t3_var	lda #0		;t3
.223c			38				sec						sec
.223d			ed 23 22		sbc $2223				sbc t2
.2240			43				asr a					asr
.2241			18				clc						clc
.2242			69 00			adc #$00		mg_var	adc #0		;mg
.2244			8d 13 25		sta $2513				sta cube.MG
.2247			bd 00 23		lda $2300,x				lda sin_tbl,x
.224a			18				clc						clc
.224b			79 00 23		adc $2300,y				adc sin_tbl,y
.224e			43				asr a					asr
.224f			8d 5c 22		sta $225c				sta mh
.2252			ad 0c 22		lda $220c				lda t1
.2255			38				sec						sec
.2256			ed 0f 22		sbc $220f				sbc t4
.2259			43				asr a					asr
.225a			18				clc						clc
.225b			69 00			adc #$00		mh_var 	adc #0		;mh
.225d			8d 2b 25		sta $252b				sta cube.MH
.2260			60				rts						rts
>2261														.align $100
.2300											sin_tbl
>2300			00												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2301			01												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2302			03												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2303			04												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2304			06												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2305			07												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2306			09												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2307			0a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2308			0c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2309			0d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>230a			0f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>230b			10												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>230c			12												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>230d			13												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>230e			15												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>230f			16												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2310			18												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2311			19												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2312			1a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2313			1c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2314			1d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2315			1f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2316			20												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2317			21												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2318			23												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2319			24												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>231a			25												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>231b			26												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>231c			27												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>231d			29												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>231e			2a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>231f			2b												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2320			2c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2321			2d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2322			2e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2323			2f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2324			30												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2325			31												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2326			32												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2327			33												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2328			34												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2329			35												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>232a			36												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>232b			36												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>232c			37												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>232d			38												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>232e			38												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>232f			39												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2330			3a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2331			3a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2332			3b												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2333			3b												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2334			3c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2335			3c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2336			3d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2337			3d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2338			3d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2339			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>233a			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>233b			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>233c			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>233d			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>233e			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>233f			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2340			3f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2341			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2342			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2343			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2344			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2345			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2346			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2347			3e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2348			3d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2349			3d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>234a			3d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>234b			3c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>234c			3c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>234d			3b												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>234e			3b												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>234f			3a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2350			3a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2351			39												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2352			38												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2353			38												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2354			37												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2355			36												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2356			36												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2357			35												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2358			34												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2359			33												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>235a			32												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>235b			31												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>235c			30												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>235d			2f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>235e			2e												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>235f			2d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2360			2c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2361			2b												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2362			2a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2363			29												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2364			27												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2365			26												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2366			25												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2367			24												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2368			23												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2369			21												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>236a			20												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>236b			1f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>236c			1d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>236d			1c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>236e			1a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>236f			19												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2370			18												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2371			16												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2372			15												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2373			13												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2374			12												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2375			10												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2376			0f												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2377			0d												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2378			0c												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2379			0a												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>237a			09												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>237b			07												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>237c			06												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>237d			04												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>237e			03												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>237f			01												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2380			00												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2381			fe												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2382			fc												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2383			fb												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2384			f9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2385			f8												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2386			f6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2387			f5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2388			f3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2389			f2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>238a			f0												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>238b			ef												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>238c			ed												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>238d			ec												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>238e			ea												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>238f			e9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2390			e7												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2391			e6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2392			e5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2393			e3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2394			e2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2395			e0												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2396			df												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2397			de												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2398			dc												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>2399			db												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>239a			da												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>239b			d9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>239c			d8												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>239d			d6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>239e			d5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>239f			d4												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a0			d3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a1			d2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a2			d1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a3			d0												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a4			cf												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a5			ce												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a6			cd												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a7			cc												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a8			cb												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23a9			ca												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23aa			c9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ab			c9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ac			c8												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ad			c7												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ae			c7												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23af			c6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b0			c5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b1			c5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b2			c4												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b3			c4												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b4			c3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b5			c3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b6			c2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b7			c2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b8			c2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23b9			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ba			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23bb			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23bc			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23bd			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23be			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23bf			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c0			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c1			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c2			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c3			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c4			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c5			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c6			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c7			c1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c8			c2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23c9			c2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ca			c2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23cb			c3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23cc			c3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23cd			c4												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ce			c4												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23cf			c5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d0			c5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d1			c6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d2			c7												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d3			c7												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d4			c8												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d5			c9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d6			c9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d7			ca												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d8			cb												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23d9			cc												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23da			cd												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23db			ce												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23dc			cf												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23dd			d0												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23de			d1												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23df			d2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e0			d3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e1			d4												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e2			d5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e3			d6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e4			d8												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e5			d9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e6			da												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e7			db												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e8			dc												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23e9			de												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ea			df												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23eb			e0												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ec			e2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ed			e3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ee			e5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ef			e6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f0			e7												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f1			e9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f2			ea												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f3			ec												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f4			ed												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f5			ef												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f6			f0												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f7			f2												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f8			f3												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23f9			f5												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23fa			f6												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23fb			f8												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23fc			f9												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23fd			fb												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23fe			fc												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
>23ff			fe												.char (63.0 * sin((s * (360.0 / 256.0)) * (pi / 180.0)));
.2400											cos_tbl
>2400			3f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2401			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2402			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2403			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2404			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2405			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2406			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2407			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2408			3d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2409			3d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>240a			3d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>240b			3c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>240c			3c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>240d			3b												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>240e			3b												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>240f			3a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2410			3a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2411			39												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2412			38												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2413			38												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2414			37												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2415			36												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2416			36												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2417			35												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2418			34												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2419			33												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>241a			32												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>241b			31												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>241c			30												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>241d			2f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>241e			2e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>241f			2d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2420			2c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2421			2b												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2422			2a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2423			29												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2424			27												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2425			26												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2426			25												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2427			24												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2428			23												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2429			21												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>242a			20												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>242b			1f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>242c			1d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>242d			1c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>242e			1a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>242f			19												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2430			18												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2431			16												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2432			15												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2433			13												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2434			12												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2435			10												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2436			0f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2437			0d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2438			0c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2439			0a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>243a			09												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>243b			07												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>243c			06												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>243d			04												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>243e			03												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>243f			01												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2440			00												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2441			fe												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2442			fc												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2443			fb												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2444			f9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2445			f8												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2446			f6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2447			f5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2448			f3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2449			f2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>244a			f0												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>244b			ef												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>244c			ed												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>244d			ec												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>244e			ea												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>244f			e9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2450			e7												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2451			e6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2452			e5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2453			e3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2454			e2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2455			e0												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2456			df												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2457			de												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2458			dc												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2459			db												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>245a			da												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>245b			d9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>245c			d8												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>245d			d6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>245e			d5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>245f			d4												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2460			d3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2461			d2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2462			d1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2463			d0												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2464			cf												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2465			ce												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2466			cd												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2467			cc												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2468			cb												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2469			ca												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>246a			c9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>246b			c9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>246c			c8												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>246d			c7												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>246e			c7												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>246f			c6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2470			c5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2471			c5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2472			c4												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2473			c4												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2474			c3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2475			c3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2476			c2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2477			c2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2478			c2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2479			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>247a			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>247b			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>247c			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>247d			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>247e			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>247f			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2480			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2481			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2482			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2483			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2484			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2485			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2486			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2487			c1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2488			c2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2489			c2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>248a			c2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>248b			c3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>248c			c3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>248d			c4												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>248e			c4												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>248f			c5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2490			c5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2491			c6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2492			c7												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2493			c7												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2494			c8												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2495			c9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2496			c9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2497			ca												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2498			cb												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>2499			cc												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>249a			cd												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>249b			ce												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>249c			cf												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>249d			d0												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>249e			d1												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>249f			d2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a0			d3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a1			d4												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a2			d5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a3			d6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a4			d8												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a5			d9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a6			da												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a7			db												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a8			dc												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24a9			de												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24aa			df												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ab			e0												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ac			e2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ad			e3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ae			e5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24af			e6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b0			e7												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b1			e9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b2			ea												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b3			ec												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b4			ed												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b5			ef												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b6			f0												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b7			f2												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b8			f3												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24b9			f5												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ba			f6												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24bb			f8												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24bc			f9												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24bd			fb												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24be			fc												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24bf			fe												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c0			ff												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c1			01												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c2			03												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c3			04												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c4			06												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c5			07												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c6			09												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c7			0a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c8			0c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24c9			0d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ca			0f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24cb			10												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24cc			12												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24cd			13												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ce			15												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24cf			16												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d0			18												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d1			19												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d2			1a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d3			1c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d4			1d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d5			1f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d6			20												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d7			21												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d8			23												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24d9			24												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24da			25												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24db			26												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24dc			27												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24dd			29												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24de			2a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24df			2b												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e0			2c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e1			2d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e2			2e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e3			2f												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e4			30												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e5			31												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e6			32												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e7			33												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e8			34												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24e9			35												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ea			36												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24eb			36												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ec			37												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ed			38												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ee			38												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ef			39												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f0			3a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f1			3a												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f2			3b												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f3			3b												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f4			3c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f5			3c												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f6			3d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f7			3d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f8			3d												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24f9			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24fa			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24fb			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24fc			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24fd			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24fe			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));
>24ff			3e												.char (63.0 * cos((c * (360.0 / 256.0)) * (pi / 180.0)));

;******  Return to file: Build.asm

.2500											cube

;******  Processing file: Cube.asm

=160											XOFFSET	= 160
=101											YOFFSET = 101
=$2500											DrawCube 	= draw_cube
=$250e											MA 			= ma_	;ma variable
=$2526											MB 			= mb_	;mb variable
=$2501											MC 			= mc_	;mc variable
=$2511											MD 			= md_	;md variable
=$2529											ME 			= me_	;me variable
=$2504											MF			= mf_	;mf variable
=$2513											MG 			= mg_	;mg variable
=$252b											MH 			= mh_	;mh variable
=$2506											MI 			= mi_	;mi variable
=$250e											ma_ 		= ma_var + 1	;ma variable
=$2526											mb_ 		= mb_var + 1	;mb variable
=$2501											mc_ 		= mc_var + 1	;mc variable
=$2511											md_ 		= md_var + 1	;md variable
=$2529											me_ 		= me_var + 1	;me variable
=$2504											mf_			= mf_var + 1	;mf variable
=$2513											mg_ 		= mg_var + 1	;mg variable
=$252b											mh_ 		= mh_var + 1	;mh variable
=$2506											mi_ 		= mi_var + 1	;mi variable
.2500											draw_cube
.2500			a9 00			lda #$00		mc_var	lda #0
.2502			18				clc						clc
.2503			69 00			adc #$00		mf_var	adc #0
.2505			69 00			adc #$00		mi_var	adc #0
.2507			aa				tax						tax
.2508			bd ab 28		lda $28ab,x				lda prj_tbl,x
.250b			85 c4			sta $c4					sta multiply.MB 	;prj_z
.250d			a9 00			lda #$00		ma_var	lda #0
.250f			18				clc						clc
.2510			69 00			adc #$00		md_var	adc #0
.2512			69 00			adc #$00		mg_var	adc #0
.2514			85 c5			sta $c5					sta multiply.MA 	;x
.2516			20 ab 29		jsr $29ab				jsr multiply.MultAB	;result / 256 in A
.2519			18				clc						clc
.251a			69 a0			adc #$a0				adc #XOFFSET		;add offset
.251c			8d 3c 27		sta $273c				sta x1a+1
.251f			8d 5b 27		sta $275b				sta x1b+1
.2522			8d 7a 27		sta $277a				sta x1c+1
.2525			a9 00			lda #$00		mb_var	lda #0
.2527			18				clc						clc
.2528			69 00			adc #$00		me_var	adc #0
.252a			69 00			adc #$00		mh_var	adc #0
.252c			85 c5			sta $c5					sta multiply.MA		;y
.252e			20 ab 29		jsr $29ab				jsr multiply.MultAB	;result / 256 in A
.2531			18				clc						clc
.2532			69 65			adc #$65				adc #YOFFSET		;add offset
.2534			8d 41 27		sta $2741				sta y1a+1
.2537			8d 60 27		sta $2760				sta y1b+1
.253a			8d 7f 27		sta $277f				sta y1c+1
.253d			ad 01 25		lda $2501				lda mc_
.2540			38				sec						sec
.2541			ed 04 25		sbc $2504				sbc mf_
.2544			6d 06 25		adc $2506				adc mi_
.2547			aa				tax						tax
.2548			bd ab 28		lda $28ab,x				lda prj_tbl,x
.254b			85 c4			sta $c4					sta multiply.MB
.254d			ad 0e 25		lda $250e				lda ma_
.2550			38				sec						sec
.2551			ed 11 25		sbc $2511				sbc md_
.2554			6d 13 25		adc $2513				adc mg_
.2557			85 c5			sta $c5					sta multiply.MA
.2559			20 ab 29		jsr $29ab				jsr multiply.MultAB
.255c			18				clc						clc
.255d			69 a0			adc #$a0				adc #XOFFSET
.255f			8d 65 27		sta $2765				sta x2a+1
.2562			8d c2 27		sta $27c2				sta x2b+1
.2565			8d 00 28		sta $2800				sta x2c+1
.2568			ad 26 25		lda $2526				lda mb_
.256b			38				sec						sec
.256c			ed 29 25		sbc $2529				sbc me_
.256f			6d 2b 25		adc $252b				adc mh_
.2572			85 c5			sta $c5					sta multiply.MA
.2574			20 ab 29		jsr $29ab				jsr multiply.MultAB
.2577			18				clc						clc
.2578			69 65			adc #$65				adc #YOFFSET
.257a			8d 6a 27		sta $276a				sta y2a+1
.257d			8d c7 27		sta $27c7				sta y2b+1
.2580			8d 05 28		sta $2805				sta y2c+1
.2583			ad 01 25		lda $2501				lda mc_
.2586			18				clc						clc
.2587			6d 04 25		adc $2504				adc mf_
.258a			38				sec						sec
.258b			ed 06 25		sbc $2506				sbc mi_
.258e			aa				tax						tax
.258f			bd ab 28		lda $28ab,x				lda prj_tbl,x
.2592			85 c4			sta $c4					sta multiply.MB
.2594			ad 0e 25		lda $250e				lda ma_
.2597			18				clc						clc
.2598			6d 11 25		adc $2511				adc md_
.259b			38				sec						sec
.259c			ed 13 25		sbc $2513				sbc mg_
.259f			85 c5			sta $c5					sta multiply.MA
.25a1			20 ab 29		jsr $29ab				jsr multiply.MultAB
.25a4			18				clc						clc
.25a5			69 a0			adc #$a0				adc #XOFFSET
.25a7			8d 46 27		sta $2746				sta x3a+1
.25aa			8d 3e 28		sta $283e				sta x3b+1
.25ad			8d 7c 28		sta $287c				sta x3c+1
.25b0			ad 26 25		lda $2526				lda mb_
.25b3			18				clc						clc
.25b4			6d 29 25		adc $2529				adc me_
.25b7			38				sec						sec
.25b8			ed 2b 25		sbc $252b				sbc mh_
.25bb			85 c5			sta $c5					sta multiply.MA
.25bd			20 ab 29		jsr $29ab				jsr multiply.MultAB
.25c0			18				clc						clc
.25c1			69 65			adc #$65				adc #YOFFSET
.25c3			8d 4b 27		sta $274b				sta y3a+1
.25c6			8d 43 28		sta $2843				sta y3b+1
.25c9			8d 81 28		sta $2881				sta y3c+1
.25cc			ad 01 25		lda $2501				lda mc_
.25cf			38				sec						sec
.25d0			ed 04 25		sbc $2504				sbc mf_
.25d3			ed 06 25		sbc $2506				sbc mi_
.25d6			aa				tax						tax
.25d7			bd ab 28		lda $28ab,x				lda prj_tbl,x
.25da			85 c4			sta $c4					sta multiply.MB
.25dc			ad 0e 25		lda $250e				lda ma_
.25df			38				sec						sec
.25e0			ed 11 25		sbc $2511				sbc md_
.25e3			ed 13 25		sbc $2513				sbc mg_
.25e6			85 c5			sta $c5					sta multiply.MA
.25e8			20 ab 29		jsr $29ab				jsr multiply.MultAB
.25eb			18				clc						clc
.25ec			69 a0			adc #$a0				adc #XOFFSET
.25ee			8d f6 27		sta $27f6				sta x4a+1
.25f1			8d 15 28		sta $2815				sta x4b+1
.25f4			8d 34 28		sta $2834				sta x4c+1
.25f7			ad 26 25		lda $2526				lda mb_
.25fa			38				sec						sec
.25fb			ed 29 25		sbc $2529				sbc me_
.25fe			ed 2b 25		sbc $252b				sbc mh_
.2601			85 c5			sta $c5					sta multiply.MA
.2603			20 ab 29		jsr $29ab				jsr multiply.MultAB
.2606			18				clc						clc
.2607			69 65			adc #$65				adc #YOFFSET
.2609			8d fb 27		sta $27fb				sta y4a+1
.260c			8d 1a 28		sta $281a				sta y4b+1
.260f			8d 39 28		sta $2839				sta y4c+1
.2612			ad 04 25		lda $2504				lda mf_
.2615			38				sec						sec
.2616			ed 01 25		sbc $2501				sbc mc_
.2619			18				clc						clc
.261a			6d 06 25		adc $2506				adc mi_
.261d			aa				tax						tax
.261e			bd ab 28		lda $28ab,x				lda prj_tbl,x
.2621			85 c4			sta $c4					sta multiply.MB
.2623			ad 11 25		lda $2511				lda md_
.2626			38				sec						sec
.2627			ed 0e 25		sbc $250e				sbc ma_
.262a			18				clc						clc
.262b			6d 13 25		adc $2513				adc mg_
.262e			85 c5			sta $c5					sta multiply.MA
.2630			20 ab 29		jsr $29ab				jsr multiply.MultAB
.2633			18				clc						clc
.2634			69 a0			adc #$a0				adc #XOFFSET
.2636			8d 84 27		sta $2784				sta x5a+1
.2639			8d a3 27		sta $27a3				sta x5b+1
.263c			8d 9b 28		sta $289b				sta x5c+1
.263f			ad 29 25		lda $2529				lda me_
.2642			38				sec						sec
.2643			ed 26 25		sbc $2526				sbc mb_
.2646			18				clc						clc
.2647			6d 2b 25		adc $252b				adc mh_
.264a			85 c5			sta $c5					sta multiply.MA
.264c			20 ab 29		jsr $29ab				jsr multiply.MultAB
.264f			18				clc						clc
.2650			69 65			adc #$65				adc #YOFFSET
.2652			8d 89 27		sta $2789				sta y5a+1
.2655			8d a8 27		sta $27a8				sta y5b+1
.2658			8d a0 28		sta $28a0				sta y5c+1
.265b			ad 06 25		lda $2506				lda mi_
.265e			38				sec						sec
.265f			ed 04 25		sbc $2504				sbc mf_
.2662			ed 01 25		sbc $2501				sbc mc_
.2665			aa				tax						tax
.2666			bd ab 28		lda $28ab,x				lda prj_tbl,x
.2669			85 c4			sta $c4					sta multiply.MB
.266b			ad 13 25		lda $2513				lda mg_
.266e			38				sec						sec
.266f			ed 11 25		sbc $2511				sbc md_
.2672			ed 0e 25		sbc $250e				sbc ma_
.2675			85 c5			sta $c5					sta multiply.MA
.2677			20 ab 29		jsr $29ab				jsr multiply.MultAB
.267a			18				clc						clc
.267b			69 a0			adc #$a0				adc #XOFFSET
.267d			8d 99 27		sta $2799				sta x6a+1
.2680			8d b8 27		sta $27b8				sta x6b+1
.2683			8d d7 27		sta $27d7				sta x6c+1
.2686			ad 2b 25		lda $252b				lda mh_
.2689			38				sec						sec
.268a			ed 29 25		sbc $2529				sbc me_
.268d			ed 26 25		sbc $2526				sbc mb_
.2690			85 c5			sta $c5					sta multiply.MA
.2692			20 ab 29		jsr $29ab				jsr multiply.MultAB
.2695			18				clc						clc
.2696			69 65			adc #$65				adc #YOFFSET
.2698			8d 9e 27		sta $279e				sta y6a+1
.269b			8d bd 27		sta $27bd				sta y6b+1
.269e			8d dc 27		sta $27dc				sta y6c+1
.26a1			ad 04 25		lda $2504				lda mf_
.26a4			38				sec						sec
.26a5			ed 01 25		sbc $2501				sbc mc_
.26a8			ed 06 25		sbc $2506				sbc mi_
.26ab			aa				tax						tax
.26ac			bd ab 28		lda $28ab,x				lda prj_tbl,x
.26af			85 c4			sta $c4					sta multiply.MB
.26b1			ad 11 25		lda $2511				lda md_
.26b4			38				sec						sec
.26b5			ed 0e 25		sbc $250e				sbc ma_
.26b8			ed 13 25		sbc $2513				sbc mg_
.26bb			85 c5			sta $c5					sta multiply.MA
.26bd			20 ab 29		jsr $29ab				jsr multiply.MultAB
.26c0			18				clc						clc
.26c1			69 a0			adc #$a0				adc #XOFFSET
.26c3			8d 53 28		sta $2853				sta x7a+1
.26c6			8d 72 28		sta $2872				sta x7b+1
.26c9			8d 91 28		sta $2891				sta x7c+1
.26cc			ad 29 25		lda $2529				lda me_
.26cf			38				sec						sec
.26d0			ed 26 25		sbc $2526				sbc mb_
.26d3			ed 2b 25		sbc $252b				sbc mh_
.26d6			85 c5			sta $c5					sta multiply.MA
.26d8			20 ab 29		jsr $29ab				jsr multiply.MultAB
.26db			18				clc						clc
.26dc			69 65			adc #$65				adc #YOFFSET
.26de			8d 58 28		sta $2858				sta y7a+1
.26e1			8d 77 28		sta $2877				sta y7b+1
.26e4			8d 96 28		sta $2896				sta y7c+1
.26e7			a9 00			lda #$00				lda #0
.26e9			38				sec						sec
.26ea			ed 01 25		sbc $2501				sbc mc_
.26ed			ed 04 25		sbc $2504				sbc mf_
.26f0			ed 06 25		sbc $2506				sbc mi_
.26f3			aa				tax						tax
.26f4			bd ab 28		lda $28ab,x				lda prj_tbl,x
.26f7			85 c4			sta $c4					sta multiply.MB
.26f9			a9 00			lda #$00				lda #0
.26fb			38				sec						sec
.26fc			ed 0e 25		sbc $250e				sbc ma_
.26ff			ed 11 25		sbc $2511				sbc md_
.2702			ed 13 25		sbc $2513				sbc mg_
.2705			85 c5			sta $c5					sta multiply.MA
.2707			20 ab 29		jsr $29ab				jsr multiply.MultAB
.270a			18				clc						clc
.270b			69 a0			adc #$a0				adc #XOFFSET
.270d			8d e1 27		sta $27e1				sta x8a+1
.2710			8d 1f 28		sta $281f				sta x8b+1
.2713			8d 5d 28		sta $285d				sta x8c+1
.2716			a9 00			lda #$00				lda #0
.2718			38				sec						sec
.2719			ed 26 25		sbc $2526				sbc mb_
.271c			ed 29 25		sbc $2529				sbc me_
.271f			ed 2b 25		sbc $252b				sbc mh_
.2722			85 c5			sta $c5					sta multiply.MA
.2724			20 ab 29		jsr $29ab				jsr multiply.MultAB
.2727			18				clc						clc
.2728			69 65			adc #$65				adc #YOFFSET
.272a			8d e6 27		sta $27e6				sta y8a+1
.272d			8d 24 28		sta $2824				sta y8b+1
.2730			8d 62 28		sta $2862				sta y8c+1
.2733			ee 20 d0		inc $d020				inc $d020
.2736			a9 01			lda #$01				lda #1
.2738			8d bd 2b		sta $2bbd				sta lineCol.Colour
.273b			a9 00			lda #$00		x1a		lda #0
.273d			8d 28 2b		sta $2b28				sta lineCol.X1
.2740			a9 00			lda #$00		y1a		lda #0
.2742			8d 49 2b		sta $2b49				sta lineCol.Y1
.2745			a9 00			lda #$00		x3a		lda #0
.2747			8d 25 2b		sta $2b25				sta lineCol.X2
.274a			a9 00			lda #$00		y3a		lda #0
.274c			8d 46 2b		sta $2b46				sta lineCol.Y2
.274f			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.2752			ee 20 d0		inc $d020				inc $d020
.2755			a9 03			lda #$03				lda #3
.2757			8d bd 2b		sta $2bbd				sta lineCol.Colour
.275a			a9 00			lda #$00		x1b		lda #0
.275c			8d 28 2b		sta $2b28				sta lineCol.X1
.275f			a9 00			lda #$00		y1b		lda #0
.2761			8d 49 2b		sta $2b49				sta lineCol.Y1
.2764			a9 00			lda #$00		x2a		lda #0
.2766			8d 25 2b		sta $2b25				sta lineCol.X2
.2769			a9 00			lda #$00		y2a		lda #0
.276b			8d 46 2b		sta $2b46				sta lineCol.Y2
.276e			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.2771			ee 20 d0		inc $d020				inc $d020
.2774			a9 01			lda #$01				lda #1
.2776			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2779			a9 00			lda #$00		x1c		lda #0
.277b			8d 28 2b		sta $2b28				sta lineCol.X1
.277e			a9 00			lda #$00		y1c		lda #0
.2780			8d 49 2b		sta $2b49				sta lineCol.Y1
.2783			a9 00			lda #$00		x5a		lda #0
.2785			8d 25 2b		sta $2b25				sta lineCol.X2
.2788			a9 00			lda #$00		y5a		lda #0
.278a			8d 46 2b		sta $2b46				sta lineCol.Y2
.278d			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.2790			ee 20 d0		inc $d020				inc $d020
.2793			a9 03			lda #$03				lda #3
.2795			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2798			a9 00			lda #$00		x6a		lda #0
.279a			8d 28 2b		sta $2b28				sta lineCol.X1
.279d			a9 00			lda #$00		y6a		lda #0
.279f			8d 49 2b		sta $2b49				sta lineCol.Y1
.27a2			a9 00			lda #$00		x5b		lda #0
.27a4			8d 25 2b		sta $2b25				sta lineCol.X2
.27a7			a9 00			lda #$00		y5b		lda #0
.27a9			8d 46 2b		sta $2b46				sta lineCol.Y2
.27ac			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.27af			ee 20 d0		inc $d020				inc $d020
.27b2			a9 02			lda #$02				lda #2
.27b4			8d bd 2b		sta $2bbd				sta lineCol.Colour
.27b7			a9 00			lda #$00		x6b		lda #0
.27b9			8d 28 2b		sta $2b28				sta lineCol.X1
.27bc			a9 00			lda #$00		y6b		lda #0
.27be			8d 49 2b		sta $2b49				sta lineCol.Y1
.27c1			a9 00			lda #$00		x2b		lda #0
.27c3			8d 25 2b		sta $2b25				sta lineCol.X2
.27c6			a9 00			lda #$00		y2b		lda #0
.27c8			8d 46 2b		sta $2b46				sta lineCol.Y2
.27cb			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.27ce			ee 20 d0		inc $d020				inc $d020
.27d1			a9 02			lda #$02				lda #2
.27d3			8d bd 2b		sta $2bbd				sta lineCol.Colour
.27d6			a9 00			lda #$00		x6c		lda #0
.27d8			8d 28 2b		sta $2b28				sta lineCol.X1
.27db			a9 00			lda #$00		y6c		lda #0
.27dd			8d 49 2b		sta $2b49				sta lineCol.Y1
.27e0			a9 00			lda #$00		x8a		lda #0
.27e2			8d 25 2b		sta $2b25				sta lineCol.X2
.27e5			a9 00			lda #$00		y8a		lda #0
.27e7			8d 46 2b		sta $2b46				sta lineCol.Y2
.27ea			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.27ed			ee 20 d0		inc $d020				inc $d020
.27f0			a9 02			lda #$02				lda #2
.27f2			8d bd 2b		sta $2bbd				sta lineCol.Colour
.27f5			a9 00			lda #$00		x4a		lda #0
.27f7			8d 28 2b		sta $2b28				sta lineCol.X1
.27fa			a9 00			lda #$00		y4a		lda #0
.27fc			8d 49 2b		sta $2b49				sta lineCol.Y1
.27ff			a9 00			lda #$00		x2c		lda #0
.2801			8d 25 2b		sta $2b25				sta lineCol.X2
.2804			a9 00			lda #$00		y2c		lda #0
.2806			8d 46 2b		sta $2b46				sta lineCol.Y2
.2809			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.280c			ce 20 d0		dec $d020				dec $d020
.280f			a9 02			lda #$02				lda #2
.2811			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2814			a9 00			lda #$00		x4b		lda #0
.2816			8d 28 2b		sta $2b28				sta lineCol.X1
.2819			a9 00			lda #$00		y4b		lda #0
.281b			8d 49 2b		sta $2b49				sta lineCol.Y1
.281e			a9 00			lda #$00		x8b		lda #0
.2820			8d 25 2b		sta $2b25				sta lineCol.X2
.2823			a9 00			lda #$00		y8b		lda #0
.2825			8d 46 2b		sta $2b46				sta lineCol.Y2
.2828			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.282b			ce 20 d0		dec $d020				dec $d020
.282e			a9 03			lda #$03				lda #3
.2830			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2833			a9 00			lda #$00		x4c		lda #0
.2835			8d 28 2b		sta $2b28				sta lineCol.X1
.2838			a9 00			lda #$00		y4c		lda #0
.283a			8d 49 2b		sta $2b49				sta lineCol.Y1
.283d			a9 00			lda #$00		x3b		lda #0
.283f			8d 25 2b		sta $2b25				sta lineCol.X2
.2842			a9 00			lda #$00		y3b		lda #0
.2844			8d 46 2b		sta $2b46				sta lineCol.Y2
.2847			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.284a			ce 20 d0		dec $d020				dec $d020
.284d			a9 03			lda #$03				lda #3
.284f			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2852			a9 00			lda #$00		x7a		lda #0
.2854			8d 28 2b		sta $2b28				sta lineCol.X1
.2857			a9 00			lda #$00		y7a		lda #0
.2859			8d 49 2b		sta $2b49				sta lineCol.Y1
.285c			a9 00			lda #$00		x8c		lda #0
.285e			8d 25 2b		sta $2b25				sta lineCol.X2
.2861			a9 00			lda #$00		y8c		lda #0
.2863			8d 46 2b		sta $2b46				sta lineCol.Y2
.2866			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.2869			ce 20 d0		dec $d020				dec $d020
.286c			a9 01			lda #$01				lda #1
.286e			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2871			a9 00			lda #$00		x7b		lda #0
.2873			8d 28 2b		sta $2b28				sta lineCol.X1
.2876			a9 00			lda #$00		y7b		lda #0
.2878			8d 49 2b		sta $2b49				sta lineCol.Y1
.287b			a9 00			lda #$00		x3c		lda #0
.287d			8d 25 2b		sta $2b25				sta lineCol.X2
.2880			a9 00			lda #$00		y3c		lda #0
.2882			8d 46 2b		sta $2b46				sta lineCol.Y2
.2885			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.2888			ce 20 d0		dec $d020				dec $d020
.288b			a9 01			lda #$01				lda #1
.288d			8d bd 2b		sta $2bbd				sta lineCol.Colour
.2890			a9 00			lda #$00		x7c		lda #0
.2892			8d 28 2b		sta $2b28				sta lineCol.X1
.2895			a9 00			lda #$00		y7c 	lda #0
.2897			8d 49 2b		sta $2b49				sta lineCol.Y1
.289a			a9 00			lda #$00		x5c		lda #0
.289c			8d 25 2b		sta $2b25				sta lineCol.X2
.289f			a9 00			lda #$00		y5c		lda #0
.28a1			8d 46 2b		sta $2b46				sta lineCol.Y2
.28a4			20 1f 2b		jsr $2b1f				jsr lineCol.Line
.28a7			ce 20 d0		dec $d020				dec $d020
.28aa			60				rts						rts
.28ab											prj_tbl
>28ab			80												.byte (128.0 / (256.0 - i)) * 256.0
>28ac			80												.byte (128.0 / (256.0 - i)) * 256.0
>28ad			81												.byte (128.0 / (256.0 - i)) * 256.0
>28ae			81												.byte (128.0 / (256.0 - i)) * 256.0
>28af			82												.byte (128.0 / (256.0 - i)) * 256.0
>28b0			82												.byte (128.0 / (256.0 - i)) * 256.0
>28b1			83												.byte (128.0 / (256.0 - i)) * 256.0
>28b2			83												.byte (128.0 / (256.0 - i)) * 256.0
>28b3			84												.byte (128.0 / (256.0 - i)) * 256.0
>28b4			84												.byte (128.0 / (256.0 - i)) * 256.0
>28b5			85												.byte (128.0 / (256.0 - i)) * 256.0
>28b6			85												.byte (128.0 / (256.0 - i)) * 256.0
>28b7			86												.byte (128.0 / (256.0 - i)) * 256.0
>28b8			86												.byte (128.0 / (256.0 - i)) * 256.0
>28b9			87												.byte (128.0 / (256.0 - i)) * 256.0
>28ba			87												.byte (128.0 / (256.0 - i)) * 256.0
>28bb			88												.byte (128.0 / (256.0 - i)) * 256.0
>28bc			89												.byte (128.0 / (256.0 - i)) * 256.0
>28bd			89												.byte (128.0 / (256.0 - i)) * 256.0
>28be			8a												.byte (128.0 / (256.0 - i)) * 256.0
>28bf			8a												.byte (128.0 / (256.0 - i)) * 256.0
>28c0			8b												.byte (128.0 / (256.0 - i)) * 256.0
>28c1			8c												.byte (128.0 / (256.0 - i)) * 256.0
>28c2			8c												.byte (128.0 / (256.0 - i)) * 256.0
>28c3			8d												.byte (128.0 / (256.0 - i)) * 256.0
>28c4			8d												.byte (128.0 / (256.0 - i)) * 256.0
>28c5			8e												.byte (128.0 / (256.0 - i)) * 256.0
>28c6			8f												.byte (128.0 / (256.0 - i)) * 256.0
>28c7			8f												.byte (128.0 / (256.0 - i)) * 256.0
>28c8			90												.byte (128.0 / (256.0 - i)) * 256.0
>28c9			90												.byte (128.0 / (256.0 - i)) * 256.0
>28ca			91												.byte (128.0 / (256.0 - i)) * 256.0
>28cb			92												.byte (128.0 / (256.0 - i)) * 256.0
>28cc			92												.byte (128.0 / (256.0 - i)) * 256.0
>28cd			93												.byte (128.0 / (256.0 - i)) * 256.0
>28ce			94												.byte (128.0 / (256.0 - i)) * 256.0
>28cf			94												.byte (128.0 / (256.0 - i)) * 256.0
>28d0			95												.byte (128.0 / (256.0 - i)) * 256.0
>28d1			96												.byte (128.0 / (256.0 - i)) * 256.0
>28d2			97												.byte (128.0 / (256.0 - i)) * 256.0
>28d3			97												.byte (128.0 / (256.0 - i)) * 256.0
>28d4			98												.byte (128.0 / (256.0 - i)) * 256.0
>28d5			99												.byte (128.0 / (256.0 - i)) * 256.0
>28d6			99												.byte (128.0 / (256.0 - i)) * 256.0
>28d7			9a												.byte (128.0 / (256.0 - i)) * 256.0
>28d8			9b												.byte (128.0 / (256.0 - i)) * 256.0
>28d9			9c												.byte (128.0 / (256.0 - i)) * 256.0
>28da			9c												.byte (128.0 / (256.0 - i)) * 256.0
>28db			9d												.byte (128.0 / (256.0 - i)) * 256.0
>28dc			9e												.byte (128.0 / (256.0 - i)) * 256.0
>28dd			9f												.byte (128.0 / (256.0 - i)) * 256.0
>28de			9f												.byte (128.0 / (256.0 - i)) * 256.0
>28df			a0												.byte (128.0 / (256.0 - i)) * 256.0
>28e0			a1												.byte (128.0 / (256.0 - i)) * 256.0
>28e1			a2												.byte (128.0 / (256.0 - i)) * 256.0
>28e2			a3												.byte (128.0 / (256.0 - i)) * 256.0
>28e3			a3												.byte (128.0 / (256.0 - i)) * 256.0
>28e4			a4												.byte (128.0 / (256.0 - i)) * 256.0
>28e5			a5												.byte (128.0 / (256.0 - i)) * 256.0
>28e6			a6												.byte (128.0 / (256.0 - i)) * 256.0
>28e7			a7												.byte (128.0 / (256.0 - i)) * 256.0
>28e8			a8												.byte (128.0 / (256.0 - i)) * 256.0
>28e9			a8												.byte (128.0 / (256.0 - i)) * 256.0
>28ea			a9												.byte (128.0 / (256.0 - i)) * 256.0
>28eb			aa												.byte (128.0 / (256.0 - i)) * 256.0
>28ec			ab												.byte (128.0 / (256.0 - i)) * 256.0
>28ed			ac												.byte (128.0 / (256.0 - i)) * 256.0
>28ee			ad												.byte (128.0 / (256.0 - i)) * 256.0
>28ef			ae												.byte (128.0 / (256.0 - i)) * 256.0
>28f0			af												.byte (128.0 / (256.0 - i)) * 256.0
>28f1			b0												.byte (128.0 / (256.0 - i)) * 256.0
>28f2			b1												.byte (128.0 / (256.0 - i)) * 256.0
>28f3			b2												.byte (128.0 / (256.0 - i)) * 256.0
>28f4			b3												.byte (128.0 / (256.0 - i)) * 256.0
>28f5			b4												.byte (128.0 / (256.0 - i)) * 256.0
>28f6			b5												.byte (128.0 / (256.0 - i)) * 256.0
>28f7			b6												.byte (128.0 / (256.0 - i)) * 256.0
>28f8			b7												.byte (128.0 / (256.0 - i)) * 256.0
>28f9			b8												.byte (128.0 / (256.0 - i)) * 256.0
>28fa			b9												.byte (128.0 / (256.0 - i)) * 256.0
>28fb			ba												.byte (128.0 / (256.0 - i)) * 256.0
>28fc			bb												.byte (128.0 / (256.0 - i)) * 256.0
>28fd			bc												.byte (128.0 / (256.0 - i)) * 256.0
>28fe			bd												.byte (128.0 / (256.0 - i)) * 256.0
>28ff			be												.byte (128.0 / (256.0 - i)) * 256.0
>2900			bf												.byte (128.0 / (256.0 - i)) * 256.0
>2901			c0												.byte (128.0 / (256.0 - i)) * 256.0
>2902			c1												.byte (128.0 / (256.0 - i)) * 256.0
>2903			c3												.byte (128.0 / (256.0 - i)) * 256.0
>2904			c4												.byte (128.0 / (256.0 - i)) * 256.0
>2905			c5												.byte (128.0 / (256.0 - i)) * 256.0
>2906			c6												.byte (128.0 / (256.0 - i)) * 256.0
>2907			c7												.byte (128.0 / (256.0 - i)) * 256.0
>2908			c9												.byte (128.0 / (256.0 - i)) * 256.0
>2909			ca												.byte (128.0 / (256.0 - i)) * 256.0
>290a			cb												.byte (128.0 / (256.0 - i)) * 256.0
>290b			cc												.byte (128.0 / (256.0 - i)) * 256.0
>290c			ce												.byte (128.0 / (256.0 - i)) * 256.0
>290d			cf												.byte (128.0 / (256.0 - i)) * 256.0
>290e			d0												.byte (128.0 / (256.0 - i)) * 256.0
>290f			d2												.byte (128.0 / (256.0 - i)) * 256.0
>2910			d3												.byte (128.0 / (256.0 - i)) * 256.0
>2911			d4												.byte (128.0 / (256.0 - i)) * 256.0
>2912			d6												.byte (128.0 / (256.0 - i)) * 256.0
>2913			d7												.byte (128.0 / (256.0 - i)) * 256.0
>2914			d9												.byte (128.0 / (256.0 - i)) * 256.0
>2915			da												.byte (128.0 / (256.0 - i)) * 256.0
>2916			db												.byte (128.0 / (256.0 - i)) * 256.0
>2917			dd												.byte (128.0 / (256.0 - i)) * 256.0
>2918			de												.byte (128.0 / (256.0 - i)) * 256.0
>2919			e0												.byte (128.0 / (256.0 - i)) * 256.0
>291a			e1												.byte (128.0 / (256.0 - i)) * 256.0
>291b			e3												.byte (128.0 / (256.0 - i)) * 256.0
>291c			e5												.byte (128.0 / (256.0 - i)) * 256.0
>291d			e6												.byte (128.0 / (256.0 - i)) * 256.0
>291e			e8												.byte (128.0 / (256.0 - i)) * 256.0
>291f			ea												.byte (128.0 / (256.0 - i)) * 256.0
>2920			eb												.byte (128.0 / (256.0 - i)) * 256.0
>2921			ed												.byte (128.0 / (256.0 - i)) * 256.0
>2922			ef												.byte (128.0 / (256.0 - i)) * 256.0
>2923			f0												.byte (128.0 / (256.0 - i)) * 256.0
>2924			f2												.byte (128.0 / (256.0 - i)) * 256.0
>2925			f4												.byte (128.0 / (256.0 - i)) * 256.0
>2926			f6												.byte (128.0 / (256.0 - i)) * 256.0
>2927			f8												.byte (128.0 / (256.0 - i)) * 256.0
>2928			fa												.byte (128.0 / (256.0 - i)) * 256.0
>2929			fc												.byte (128.0 / (256.0 - i)) * 256.0
>292a			fe												.byte (128.0 / (256.0 - i)) * 256.0
>292b			55												.byte (128.0 / (256.0 - i)) * 256.0
>292c			55												.byte (128.0 / (256.0 - i)) * 256.0
>292d			55												.byte (128.0 / (256.0 - i)) * 256.0
>292e			56												.byte (128.0 / (256.0 - i)) * 256.0
>292f			56												.byte (128.0 / (256.0 - i)) * 256.0
>2930			56												.byte (128.0 / (256.0 - i)) * 256.0
>2931			56												.byte (128.0 / (256.0 - i)) * 256.0
>2932			56												.byte (128.0 / (256.0 - i)) * 256.0
>2933			57												.byte (128.0 / (256.0 - i)) * 256.0
>2934			57												.byte (128.0 / (256.0 - i)) * 256.0
>2935			57												.byte (128.0 / (256.0 - i)) * 256.0
>2936			57												.byte (128.0 / (256.0 - i)) * 256.0
>2937			58												.byte (128.0 / (256.0 - i)) * 256.0
>2938			58												.byte (128.0 / (256.0 - i)) * 256.0
>2939			58												.byte (128.0 / (256.0 - i)) * 256.0
>293a			58												.byte (128.0 / (256.0 - i)) * 256.0
>293b			59												.byte (128.0 / (256.0 - i)) * 256.0
>293c			59												.byte (128.0 / (256.0 - i)) * 256.0
>293d			59												.byte (128.0 / (256.0 - i)) * 256.0
>293e			59												.byte (128.0 / (256.0 - i)) * 256.0
>293f			5a												.byte (128.0 / (256.0 - i)) * 256.0
>2940			5a												.byte (128.0 / (256.0 - i)) * 256.0
>2941			5a												.byte (128.0 / (256.0 - i)) * 256.0
>2942			5a												.byte (128.0 / (256.0 - i)) * 256.0
>2943			5b												.byte (128.0 / (256.0 - i)) * 256.0
>2944			5b												.byte (128.0 / (256.0 - i)) * 256.0
>2945			5b												.byte (128.0 / (256.0 - i)) * 256.0
>2946			5b												.byte (128.0 / (256.0 - i)) * 256.0
>2947			5c												.byte (128.0 / (256.0 - i)) * 256.0
>2948			5c												.byte (128.0 / (256.0 - i)) * 256.0
>2949			5c												.byte (128.0 / (256.0 - i)) * 256.0
>294a			5c												.byte (128.0 / (256.0 - i)) * 256.0
>294b			5d												.byte (128.0 / (256.0 - i)) * 256.0
>294c			5d												.byte (128.0 / (256.0 - i)) * 256.0
>294d			5d												.byte (128.0 / (256.0 - i)) * 256.0
>294e			5d												.byte (128.0 / (256.0 - i)) * 256.0
>294f			5e												.byte (128.0 / (256.0 - i)) * 256.0
>2950			5e												.byte (128.0 / (256.0 - i)) * 256.0
>2951			5e												.byte (128.0 / (256.0 - i)) * 256.0
>2952			5e												.byte (128.0 / (256.0 - i)) * 256.0
>2953			5f												.byte (128.0 / (256.0 - i)) * 256.0
>2954			5f												.byte (128.0 / (256.0 - i)) * 256.0
>2955			5f												.byte (128.0 / (256.0 - i)) * 256.0
>2956			60												.byte (128.0 / (256.0 - i)) * 256.0
>2957			60												.byte (128.0 / (256.0 - i)) * 256.0
>2958			60												.byte (128.0 / (256.0 - i)) * 256.0
>2959			60												.byte (128.0 / (256.0 - i)) * 256.0
>295a			61												.byte (128.0 / (256.0 - i)) * 256.0
>295b			61												.byte (128.0 / (256.0 - i)) * 256.0
>295c			61												.byte (128.0 / (256.0 - i)) * 256.0
>295d			62												.byte (128.0 / (256.0 - i)) * 256.0
>295e			62												.byte (128.0 / (256.0 - i)) * 256.0
>295f			62												.byte (128.0 / (256.0 - i)) * 256.0
>2960			62												.byte (128.0 / (256.0 - i)) * 256.0
>2961			63												.byte (128.0 / (256.0 - i)) * 256.0
>2962			63												.byte (128.0 / (256.0 - i)) * 256.0
>2963			63												.byte (128.0 / (256.0 - i)) * 256.0
>2964			64												.byte (128.0 / (256.0 - i)) * 256.0
>2965			64												.byte (128.0 / (256.0 - i)) * 256.0
>2966			64												.byte (128.0 / (256.0 - i)) * 256.0
>2967			65												.byte (128.0 / (256.0 - i)) * 256.0
>2968			65												.byte (128.0 / (256.0 - i)) * 256.0
>2969			65												.byte (128.0 / (256.0 - i)) * 256.0
>296a			66												.byte (128.0 / (256.0 - i)) * 256.0
>296b			66												.byte (128.0 / (256.0 - i)) * 256.0
>296c			66												.byte (128.0 / (256.0 - i)) * 256.0
>296d			67												.byte (128.0 / (256.0 - i)) * 256.0
>296e			67												.byte (128.0 / (256.0 - i)) * 256.0
>296f			67												.byte (128.0 / (256.0 - i)) * 256.0
>2970			68												.byte (128.0 / (256.0 - i)) * 256.0
>2971			68												.byte (128.0 / (256.0 - i)) * 256.0
>2972			68												.byte (128.0 / (256.0 - i)) * 256.0
>2973			69												.byte (128.0 / (256.0 - i)) * 256.0
>2974			69												.byte (128.0 / (256.0 - i)) * 256.0
>2975			69												.byte (128.0 / (256.0 - i)) * 256.0
>2976			6a												.byte (128.0 / (256.0 - i)) * 256.0
>2977			6a												.byte (128.0 / (256.0 - i)) * 256.0
>2978			6a												.byte (128.0 / (256.0 - i)) * 256.0
>2979			6b												.byte (128.0 / (256.0 - i)) * 256.0
>297a			6b												.byte (128.0 / (256.0 - i)) * 256.0
>297b			6b												.byte (128.0 / (256.0 - i)) * 256.0
>297c			6c												.byte (128.0 / (256.0 - i)) * 256.0
>297d			6c												.byte (128.0 / (256.0 - i)) * 256.0
>297e			6c												.byte (128.0 / (256.0 - i)) * 256.0
>297f			6d												.byte (128.0 / (256.0 - i)) * 256.0
>2980			6d												.byte (128.0 / (256.0 - i)) * 256.0
>2981			6d												.byte (128.0 / (256.0 - i)) * 256.0
>2982			6e												.byte (128.0 / (256.0 - i)) * 256.0
>2983			6e												.byte (128.0 / (256.0 - i)) * 256.0
>2984			6f												.byte (128.0 / (256.0 - i)) * 256.0
>2985			6f												.byte (128.0 / (256.0 - i)) * 256.0
>2986			6f												.byte (128.0 / (256.0 - i)) * 256.0
>2987			70												.byte (128.0 / (256.0 - i)) * 256.0
>2988			70												.byte (128.0 / (256.0 - i)) * 256.0
>2989			70												.byte (128.0 / (256.0 - i)) * 256.0
>298a			71												.byte (128.0 / (256.0 - i)) * 256.0
>298b			71												.byte (128.0 / (256.0 - i)) * 256.0
>298c			72												.byte (128.0 / (256.0 - i)) * 256.0
>298d			72												.byte (128.0 / (256.0 - i)) * 256.0
>298e			72												.byte (128.0 / (256.0 - i)) * 256.0
>298f			73												.byte (128.0 / (256.0 - i)) * 256.0
>2990			73												.byte (128.0 / (256.0 - i)) * 256.0
>2991			74												.byte (128.0 / (256.0 - i)) * 256.0
>2992			74												.byte (128.0 / (256.0 - i)) * 256.0
>2993			75												.byte (128.0 / (256.0 - i)) * 256.0
>2994			75												.byte (128.0 / (256.0 - i)) * 256.0
>2995			75												.byte (128.0 / (256.0 - i)) * 256.0
>2996			76												.byte (128.0 / (256.0 - i)) * 256.0
>2997			76												.byte (128.0 / (256.0 - i)) * 256.0
>2998			77												.byte (128.0 / (256.0 - i)) * 256.0
>2999			77												.byte (128.0 / (256.0 - i)) * 256.0
>299a			78												.byte (128.0 / (256.0 - i)) * 256.0
>299b			78												.byte (128.0 / (256.0 - i)) * 256.0
>299c			78												.byte (128.0 / (256.0 - i)) * 256.0
>299d			79												.byte (128.0 / (256.0 - i)) * 256.0
>299e			79												.byte (128.0 / (256.0 - i)) * 256.0
>299f			7a												.byte (128.0 / (256.0 - i)) * 256.0
>29a0			7a												.byte (128.0 / (256.0 - i)) * 256.0
>29a1			7b												.byte (128.0 / (256.0 - i)) * 256.0
>29a2			7b												.byte (128.0 / (256.0 - i)) * 256.0
>29a3			7c												.byte (128.0 / (256.0 - i)) * 256.0
>29a4			7c												.byte (128.0 / (256.0 - i)) * 256.0
>29a5			7d												.byte (128.0 / (256.0 - i)) * 256.0
>29a6			7d												.byte (128.0 / (256.0 - i)) * 256.0
>29a7			7e												.byte (128.0 / (256.0 - i)) * 256.0
>29a8			7e												.byte (128.0 / (256.0 - i)) * 256.0
>29a9			7f												.byte (128.0 / (256.0 - i)) * 256.0
>29aa			7f												.byte (128.0 / (256.0 - i)) * 256.0

;******  Return to file: Build.asm

.29ab											multiply

;******  Processing file: Multiply.asm

>00c4											MB 		.byte ?
>00c5											MA		.byte ?
.29ab			a2 00			ldx #$00		MultAB			ldx #0
.29ad			a5 c5			lda $c5							lda MA
.29af			10 04			bpl $29b5						bpl +
.29b1			42				neg a							neg
.29b2			85 c5			sta $c5							sta MA
.29b4			e8				inx								inx
.29b5			a9 00			lda #$00		+				lda #0
.29b7			18				clc				    			clc
.29b8			6a				ror a			 				ror
.29b9			66 c5			ror $c5							ror MA
.29bb			90 03			bcc $29c0						bcc +
.29bd			18				clc								clc
.29be			65 c4			adc $c4							adc MB
.29c0			6a				ror a			+ 				ror
.29c1			66 c5			ror $c5							ror MA
.29c3			90 03			bcc $29c8						bcc +
.29c5			18				clc								clc
.29c6			65 c4			adc $c4							adc MB
.29c8			6a				ror a			+ 				ror
.29c9			66 c5			ror $c5							ror MA
.29cb			90 03			bcc $29d0						bcc +
.29cd			18				clc								clc
.29ce			65 c4			adc $c4							adc MB
.29d0			6a				ror a			+ 				ror
.29d1			66 c5			ror $c5							ror MA
.29d3			90 03			bcc $29d8						bcc +
.29d5			18				clc								clc
.29d6			65 c4			adc $c4							adc MB
.29d8			6a				ror a			+ 				ror
.29d9			66 c5			ror $c5							ror MA
.29db			90 03			bcc $29e0						bcc +
.29dd			18				clc								clc
.29de			65 c4			adc $c4							adc MB
.29e0			6a				ror a			+ 				ror
.29e1			66 c5			ror $c5							ror MA
.29e3			90 03			bcc $29e8						bcc +
.29e5			18				clc								clc
.29e6			65 c4			adc $c4							adc MB
.29e8			6a				ror a			+ 				ror
.29e9			66 c5			ror $c5							ror MA
.29eb			90 03			bcc $29f0						bcc +
.29ed			18				clc								clc
.29ee			65 c4			adc $c4							adc MB
.29f0			6a				ror a			+ 				ror
.29f1			66 c5			ror $c5							ror MA
.29f3			90 03			bcc $29f8						bcc +
.29f5			18				clc								clc
.29f6			65 c4			adc $c4							adc MB
.29f8			6a				ror a			+ 				ror
.29f9			66 c5			ror $c5							ror MA
.29fb			90 03			bcc $2a00						bcc +
.29fd			18				clc								clc
.29fe			65 c4			adc $c4							adc MB
.2a00			e0 00			cpx #$00		+				cpx #0
.2a02			f0 07			beq $2a0b						beq +
.2a04			49 ff			eor #$ff						eor #$ff
.2a06			a6 c5			ldx $c5							ldx MA
.2a08			d0 01			bne $2a0b						bne +
.2a0a			1a				inc a							inc a
.2a0b			60				rts				+				rts

;******  Return to file: Build.asm

.2a0c											lineCol

;******  Processing file: LineColour.asm

=$d03c											BPX 	= $d03c
=$d03d											BPY 	= $d03d
=$d040											B0PIX 	= $d040
=$d041											B1PIX	= $d041
=$ee											INC_ABS	= $ee
=$ce											DEC_ABS = $ce
=$0c											TSB_ABS = $0c
=$1c											TRB_ABS = $1c
>2a0c													.align $100
=$2b00											DRAW_COL_PAGE	= *
=11039											Line 	= DRAW_COL_PAGE + drwline	;Draw line routine address
=11197											Colour 	= DRAW_COL_PAGE + col 		;Colour to draw value
=11048											X1		= DRAW_COL_PAGE + x1var + 1	;X1 line value
=11045											X2		= DRAW_COL_PAGE + x2var + 1	;X2 line value
=11081											Y1		= DRAW_COL_PAGE + y1var + 1	;Y1 line value
=11078											Y2		= DRAW_COL_PAGE + y2var + 1	;Y2 line value
.2b00	0000	a8				tay				-			tay
.2b01	0001	a9 ee			lda #$ee					lda #INC_ABS
.2b03	0003	80 4b			bra $0050					bra +
.2b05	0005	ae 28 2b		ldx $2b28		invert		ldx X1
.2b08	0008	ac 25 2b		ldy $2b25					ldy X2
.2b0b	000b	8e 25 2b		stx $2b25					stx	X2
.2b0e	000e	8c 28 2b		sty $2b28					sty X1
.2b11	0011	ae 49 2b		ldx $2b49					ldx Y1
.2b14	0014	ac 46 2b		ldy $2b46					ldy Y2
.2b17	0017	8e 46 2b		stx $2b46					stx Y2
.2b1a	001a	8c 49 2b		sty $2b49					sty Y1
.2b1d	001d	80 05			bra $0024					bra x2var
.2b1f	001f	7b				tba				drwline		tba
.2b20	0020	48				pha							pha
.2b21	0021	a9 2b			lda #$2b					lda #>DRAW_COL_PAGE
.2b23	0023	5b				tab							tab
.2b24	0024	a9 24			lda #$24		x2var		lda #*	;x2 variable
.2b26	0026	38				sec							sec
.2b27	0027	e9 27			sbc #$27		x1var		sbc #*	;x1 variable
.2b29	0029	90 da			bcc $0005					blt invert
.2b2b	002b	85 82			sta $82						sta dx1mem+1
.2b2d	002d	85 9c			sta $9c						sta dx2mem+1
.2b2f	002f	4b				taz							taz
.2b30	0030	ad 28 2b		lda $2b28					lda X1
.2b33	0033	4a				lsr a						lsr
.2b34	0034	4a				lsr a						lsr
.2b35	0035	4a				lsr a						lsr
.2b36	0036	8d 3c d0		sta $d03c					sta BPX
.2b39	0039	ad 28 2b		lda $2b28					lda X1
.2b3c	003c	29 07			and #$07					and #%00000111
.2b3e	003e	aa				tax							tax
.2b3f	003f	ad 49 2b		lda $2b49					lda Y1
.2b42	0042	8d 3d d0		sta $d03d					sta BPY
.2b45	0045	a9 45			lda #$45		y2var		lda #*	;y2 variable
.2b47	0047	38				sec							sec
.2b48	0048	e9 48			sbc #$48		y1var		sbc #*	;y1 variable
.2b4a	004a	b0 b4			bcs $0000					bge -
.2b4c	004c	42				neg a						neg
.2b4d	004d	a8				tay							tay
.2b4e	004e	a9 ce			lda #$ce					lda #DEC_ABS
.2b50	0050	85 a3			sta $a3			+			sta incdecy
.2b52	0052	85 7e			sta $7e						sta decincy
.2b54	0054	84 7b			sty $7b						sty dy1mem+1
.2b56	0056	84 a1			sty $a1						sty dy2mem+1
.2b58	0058	44 bd			asr $bd						asr col
.2b5a	005a	a9 1c			lda #$1c					lda #TRB_ABS
.2b5c	005c	90 02			bcc $0060					bcc +
.2b5e	005e	a9 0c			lda #$0c					lda #TSB_ABS
.2b60	0060	85 8e			sta $8e			+			sta dxcolbit0
.2b62	0062	85 b0			sta $b0						sta dycolbit0
.2b64	0064	44 bd			asr $bd						asr col
.2b66	0066	a9 1c			lda #$1c					lda #TRB_ABS
.2b68	0068	90 02			bcc $006c					bcc +
.2b6a	006a	a9 0c			lda #$0c					lda #TSB_ABS
.2b6c	006c	85 91			sta $91			+			sta dxcolbit1
.2b6e	006e	85 b3			sta $b3						sta dycolbit1
.2b70	0070	a9 00			lda #$00					lda #0
.2b72	0072	c4 82			cpy $82						cpy dx1mem+1
.2b74	0074	b0 2a			bcs $00a0					bge Grady
.2b76	0076	38				sec							sec
.2b77	0077	80 08			bra $0081					bra Gradx
.2b79	0079	e8				inx				-			inx
.2b7a	007a	69 7a			adc #$7a		dy1mem		adc #*	;dy
.2b7c	007c	90 05			bcc $0083					bcc	+
.2b7e	007e	ee 3d d0		inc $d03d		decincy		inc BPY
.2b81	0081									Gradx
.2b81	0081	e9 81			sbc #$81		dx1mem		sbc #*	;dx
.2b83	0083	a8				tay				+			tay
.2b84	0084	b5 be			lda $be,x					lda mask,x
.2b86	0086	d0 06			bne $008e					bne +
.2b88	0088	ee 3c d0		inc $d03c					inc BPX
.2b8b	008b	aa				tax							tax
.2b8c	008c	a9 80			lda #$80					lda #%10000000
.2b8e	008e									+
.2b8e	008e	0c 40 d0		tsb $d040		dxcolbit0	tsb B0PIX
.2b91	0091	0c 41 d0		tsb $d041		dxcolbit1	tsb B1PIX
.2b94	0094	98				tya							tya
.2b95	0095	3b				dez							dez
.2b96	0096	d0 e1			bne $0079					bne	-
.2b98	0098	68				pla							pla
.2b99	0099	5b				tab							tab
.2b9a	009a	60				rts							rts
.2b9b	009b									-
.2b9b	009b	69 9b			adc #$9b		dx2mem		adc #*	;dx
.2b9d	009d	90 03			bcc $00a2					bcc	+
.2b9f	009f	e8				inx							inx
.2ba0	00a0									Grady
.2ba0	00a0	e9 a0			sbc #$a0		dy2mem		sbc #*	;dy
.2ba2	00a2	4b				taz				+			taz
.2ba3	00a3	ee 3d d0		inc $d03d		incdecy		inc BPY
.2ba6	00a6	b5 be			lda $be,x					lda mask,x
.2ba8	00a8	d0 06			bne $00b0					bne	+
.2baa	00aa	ee 3c d0		inc $d03c					inc BPX
.2bad	00ad	aa				tax							tax
.2bae	00ae	a9 80			lda #$80					lda #%10000000
.2bb0	00b0									+
.2bb0	00b0	0c 40 d0		tsb $d040		dycolbit0	tsb B0PIX
.2bb3	00b3	0c 41 d0		tsb $d041		dycolbit1	tsb B1PIX
.2bb6	00b6	6b				tza							tza
.2bb7	00b7	88				dey							dey
.2bb8	00b8	d0 e1			bne $009b					bne	-
.2bba	00ba	68				pla							pla
.2bbb	00bb	5b				tab							tab
.2bbc	00bc	60				rts							rts
>2bbd	00bd	00								col 		.byte 0
>2bbe	00be	80								mask		.byte %10000000
>2bbf	00bf	40											.byte %01000000
>2bc0	00c0	20											.byte %00100000
>2bc1	00c1	10											.byte %00010000
>2bc2	00c2	08											.byte %00001000
>2bc3	00c3	04											.byte %00000100
>2bc4	00c4	02											.byte %00000010
>2bc5	00c5	01											.byte %00000001
>2bc6	00c6	00											.byte %00000000	;overflow inc BPX

;******  Return to file: Build.asm


;******  End of listing
